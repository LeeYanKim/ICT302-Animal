// <auto-generated />
using System;
using ICT302_BackendAPI.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICT302_BackendAPI.Database.Migrations
{
    [DbContext(typeof(SchemaContext))]
    partial class SchemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.AccessType", b =>
                {
                    b.Property<byte[]>("AccessTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("AccessType_ID");

                    b.Property<string>("AccessTypeDetails")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("AccessType_Details");

                    b.HasKey("AccessTypeID");

                    b.ToTable("accesstype");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Animal", b =>
                {
                    b.Property<byte[]>("AnimalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Animal_ID");

                    b.Property<DateTime>("AnimalDOB")
                        .HasColumnType("date")
                        .HasColumnName("Animal_DOB");

                    b.Property<string>("AnimalName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Animal_Name");

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Animal_Type");

                    b.Property<string>("VideoFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Video_File_Name");

                    b.Property<DateTime?>("VideoUploadDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Video_Upload_Date");

                    b.HasKey("AnimalID");

                    b.ToTable("animal");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.AnimalAccess", b =>
                {
                    b.Property<byte[]>("AccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Access_ID");

                    b.Property<string>("AccessType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Access_Type");

                    b.Property<byte[]>("AnimalID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Animal_ID");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("date")
                        .HasColumnName("Assigned_Date");

                    b.Property<byte[]>("UserID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("User_ID");

                    b.HasKey("AccessID");

                    b.HasIndex("AnimalID");

                    b.HasIndex("UserID");

                    b.ToTable("animalaccess");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Billing", b =>
                {
                    b.Property<byte[]>("BillingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Billing_ID");

                    b.Property<byte[]>("GPCID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("GPC_ID");

                    b.Property<byte[]>("JobID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Job_ID");

                    b.Property<byte[]>("SubscriptionID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Subscription_ID");

                    b.Property<byte[]>("UserID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("User_ID");

                    b.HasKey("BillingID");

                    b.HasIndex("GPCID");

                    b.HasIndex("JobID");

                    b.HasIndex("SubscriptionID");

                    b.HasIndex("UserID");

                    b.ToTable("billing");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Graphic", b =>
                {
                    b.Property<byte[]>("GPCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("GPC_ID");

                    b.Property<byte[]>("AnimalID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Animal_ID");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("File_Path");

                    b.Property<DateTime>("GPCDateUpload")
                        .HasColumnType("date")
                        .HasColumnName("GPC_Date_Upload");

                    b.Property<string>("GPCName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("GPC_Name");

                    b.Property<int>("GPCSize")
                        .HasColumnType("int")
                        .HasColumnName("GPC_Size");

                    b.HasKey("GPCID");

                    b.HasIndex("AnimalID");

                    b.ToTable("graphic");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.JobDetails", b =>
                {
                    b.Property<byte[]>("JDID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("JD_ID");

                    b.Property<byte[]>("GPCID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("GPC_ID");

                    b.Property<string>("ModelGenType")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Model_Gen_Type");

                    b.Property<byte[]>("ModelID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Model_ID");

                    b.HasKey("JDID");

                    b.HasIndex("GPCID");

                    b.HasIndex("ModelID");

                    b.ToTable("jobdetails");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.JobsCompleted", b =>
                {
                    b.Property<byte[]>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Job_ID");

                    b.Property<byte[]>("JDID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("JD_ID");

                    b.Property<int>("JobSize")
                        .HasColumnType("int")
                        .HasColumnName("Job_Size");

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Job_Type");

                    b.Property<DateTime>("JobsEnd")
                        .HasColumnType("date")
                        .HasColumnName("Jobs_End");

                    b.Property<DateTime>("JobsStart")
                        .HasColumnType("date")
                        .HasColumnName("Jobs_Start");

                    b.HasKey("JobID");

                    b.HasIndex("JDID");

                    b.ToTable("jobscompleted");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.JobsPending", b =>
                {
                    b.Property<int>("QueueNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Queue_Number");

                    b.Property<byte[]>("JDID")
                        .IsRequired()
                        .HasColumnType("binary(16)");

                    b.Property<DateTime>("JobAdded")
                        .HasColumnType("date")
                        .HasColumnName("Job_Added");

                    b.Property<byte[]>("JobDetailsId")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("JD_ID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("char(35)")
                        .HasColumnName("Status");

                    b.HasKey("QueueNumber");

                    b.HasIndex("JDID");

                    b.ToTable("jobspending");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Model3D", b =>
                {
                    b.Property<byte[]>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Model_ID");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("File_Path");

                    b.Property<byte[]>("GPCID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("GPC_ID");

                    b.Property<DateTime>("ModelDateGen")
                        .HasColumnType("date")
                        .HasColumnName("Model_Date_Gen");

                    b.Property<string>("ModelTitle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Model_Title");

                    b.HasKey("ModelID");

                    b.HasIndex("GPCID");

                    b.ToTable("model3d");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.OrgRequests", b =>
                {
                    b.Property<byte[]>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Request_ID");

                    b.Property<DateTime?>("DateProcessed")
                        .HasColumnType("date")
                        .HasColumnName("Date_Processed");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("date")
                        .HasColumnName("Date_Requested");

                    b.Property<byte[]>("OrgID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Org_ID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Status");

                    b.Property<byte[]>("UserID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("User_ID");

                    b.HasKey("RequestID");

                    b.HasIndex("OrgID");

                    b.HasIndex("UserID");

                    b.ToTable("org_requests");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Organisation", b =>
                {
                    b.Property<byte[]>("OrgID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Org_ID");

                    b.Property<string>("OrgEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Org_Email");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Org_Name");

                    b.HasKey("OrgID");

                    b.ToTable("organisation");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.OrganisationAccess", b =>
                {
                    b.Property<byte[]>("OrgAccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("OrgAccess_ID");

                    b.Property<byte[]>("AccessID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Access_ID");

                    b.Property<string>("AccessType")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Access_Type");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("date")
                        .HasColumnName("Assigned_Date");

                    b.Property<byte[]>("OrgID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Org_ID");

                    b.HasKey("OrgAccessID");

                    b.HasIndex("AccessID");

                    b.HasIndex("OrgID");

                    b.ToTable("organisationaccess");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Subscription", b =>
                {
                    b.Property<byte[]>("SubscriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Subscription_ID");

                    b.Property<int>("ChargeRate")
                        .HasColumnType("int")
                        .HasColumnName("Charge_Rate");

                    b.Property<int>("StorageSize")
                        .HasColumnType("int")
                        .HasColumnName("Storage_Size");

                    b.Property<string>("SubscriptionTitle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Subscription_Title");

                    b.HasKey("SubscriptionID");

                    b.ToTable("subscription");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Transaction", b =>
                {
                    b.Property<byte[]>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Transaction_ID");

                    b.Property<byte[]>("AnimalID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("Animal_ID");

                    b.Property<byte[]>("TransTypeID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("TransType_ID");

                    b.Property<byte[]>("UserID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("User_ID");

                    b.HasKey("TransactionID");

                    b.HasIndex("AnimalID");

                    b.HasIndex("TransTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.TransactionType", b =>
                {
                    b.Property<byte[]>("TransTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("TransType_ID");

                    b.Property<string>("TransDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Trans_Details");

                    b.HasKey("TransTypeID");

                    b.ToTable("transactiontype");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.User", b =>
                {
                    b.Property<byte[]>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("binary(16)")
                        .HasColumnName("User_ID");

                    b.Property<string>("PermissionLevel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("char(10)")
                        .HasColumnName("Permission_Level");

                    b.Property<byte[]>("SubscriptionID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("subscription_ID");

                    b.Property<DateTime>("UserDateJoin")
                        .HasColumnType("date")
                        .HasColumnName("User_Date_Join");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("User_Email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("User_Name");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("User_Password");

                    b.HasKey("UserID");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.UserAccess", b =>
                {
                    b.Property<byte[]>("OrgID")
                        .HasColumnType("binary(16)")
                        .HasColumnName("Org_ID")
                        .HasColumnOrder(0);

                    b.Property<byte[]>("UserID")
                        .HasColumnType("binary(16)")
                        .HasColumnName("User_ID")
                        .HasColumnOrder(1);

                    b.Property<byte[]>("AccessTypeID")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("AccessType_ID");

                    b.HasKey("OrgID", "UserID");

                    b.HasIndex("AccessTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("useraccess");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.AnimalAccess", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Billing", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Graphic", "Graphic")
                        .WithMany()
                        .HasForeignKey("GPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.JobsCompleted", "JobsCompleted")
                        .WithMany()
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Graphic");

                    b.Navigation("JobsCompleted");

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Graphic", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Animal", "Animal")
                        .WithMany("Graphics")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.JobDetails", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Graphic", "Graphic")
                        .WithMany()
                        .HasForeignKey("GPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.Model3D", "Model3D")
                        .WithMany()
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Graphic");

                    b.Navigation("Model3D");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.JobsCompleted", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.JobDetails", "JobDetails")
                        .WithMany()
                        .HasForeignKey("JDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobDetails");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.JobsPending", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.JobDetails", "JobDetails")
                        .WithMany()
                        .HasForeignKey("JDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobDetails");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Model3D", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Graphic", "Graphic")
                        .WithMany()
                        .HasForeignKey("GPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Graphic");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.OrgRequests", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrgID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.OrganisationAccess", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.AnimalAccess", "AnimalAccess")
                        .WithMany()
                        .HasForeignKey("AccessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrgID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalAccess");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Transaction", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("TransactionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.User", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.UserAccess", b =>
                {
                    b.HasOne("ICT302_BackendAPI.Database.Models.AccessType", "AccessType")
                        .WithMany()
                        .HasForeignKey("AccessTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrgID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICT302_BackendAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessType");

                    b.Navigation("Organisation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICT302_BackendAPI.Database.Models.Animal", b =>
                {
                    b.Navigation("Graphics");
                });
#pragma warning restore 612, 618
        }
    }
}
